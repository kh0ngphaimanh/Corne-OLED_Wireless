/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt { flavor = "tap-preferred"; };

/ {
    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <4 3>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <2 3>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <2 3 4>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <9 8>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <19 20 21>;
        };

        delWord {
            bindings = <&kp LC(BACKSPACE)>;
            key-positions = <7 8 9>;
        };

        closeWindow {
            bindings = <&kp LC(Q)>;
            key-positions = <26 27 28>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <7 8>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q            &kp W           &kp F        &kp P             &kp B        &kp J           &kp L              &kp U        &kp Y            &kp SEMICOLON   &none
&none  &mt RIGHT_WIN A  &mt LEFT_ALT R  &mt LCTRL S  &mt LEFT_SHIFT T  &kp G        &kp M           &mt RIGHT_SHIFT N  &mt RCTRL E  &mt RIGHT_ALT I  &mt LEFT_WIN O  &none
&none  &kp Z            &kp X           &kp C        &kp D             &kp V        &kp K           &kp H              &kp COMMA    &kp DOT          &kp SLASH       &none
                                        &none        &mo 1             &kp SPACE    &kp LEFT_SHIFT  &mo 2              &none
            >;

            label = "base";
        };

        nav {
            bindings = <
&trans  &none     &none     &none      &mo 5           &mkp RCLK    &kp PAGE_UP    &kp HOME  &kp UP_ARROW  &kp END    &none  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LEFT_SHIFT  &mkp LCLK    &kp PAGE_DOWN  &kp DOWN  &kp DOWN      &kp RIGHT  &none  &trans
&trans  &none     &none     &none      &none           &none        &none          &none     &none         &none      &none  &trans
                            &trans     &trans          &trans       &trans         &trans    &trans
            >;

            label = "nav";
        };

        symbols {
            bindings = <
&trans  &none         &kp LESS_THAN  &kp GREATER_THAN      &kp MINUS  &kp PIPE         &kp CARET    &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp DOLLAR      &none              &trans
&trans  &kp QUESTION  &kp ASTERISK   &kp NON_US_BACKSLASH  &kp EQUAL  &kp AMPERSAND    &kp HASH     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp COLON       &kp DOUBLE_QUOTES  &trans
&trans  &kp TILDE     &kp PLUS       &kp EXCLAMATION       &kp GRAVE  &kp PERCENT      &kp AT_SIGN  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp UNDERSCORE  &kp SQT            &trans
                                     &trans                &trans     &trans           &trans       &trans                &trans
            >;

            label = "symbols";
        };

        numbers {
            bindings = <
&trans  &none     &none     &kp ASTERISK  &kp PLUS        &kp GREATER_THAN    &kp EQUAL   &kp N7  &kp N8  &kp N9  &none   &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL     &kp LEFT_SHIFT  &kp LESS_THAN       &kp COMMA   &kp N4  &kp N5  &kp N6  &kp N0  &trans
&trans  &none     &none     &kp SLASH     &kp MINUS       &kp PERCENT         &kp PERIOD  &kp N1  &kp N2  &kp N3  &none   &trans
                            &trans        &trans          &trans              &trans      &trans  &trans
            >;

            label = "numbers";
        };

        functions {
            label = "functions";
            bindings = <
&trans  &none       &none           &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &none     &kp F1      &kp F2           &kp F3        &kp F4      &kp F5      &kp F6
&trans  &kp LGUI    &kp LALT        &kp LCTRL             &kp LEFT_SHIFT        &none     &kp F7      &kp F8           &kp F9        &kp F10     &kp F11     &kp F12
&trans  &kp K_BACK  &kp C_PREVIOUS  &kp C_NEXT            &kp K_FORWARD         &none     &kp K_MUTE  &kp C_VOLUME_UP  &kp C_VOL_DN  &bt BT_NXT  &bt BT_PRV  &bt BT_CLR
                                    &trans                &trans                &trans    &trans      &trans           &trans
            >;
        };

        mouse {
            label = "mouse";
            bindings = <
&trans  &none  &none  &none   &none   &none     &msc SCRL_UP    &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT  &none  &trans
&trans  &none  &none  &none   &none   &none     &msc SCRL_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none  &trans
&trans  &none  &none  &none   &none   &none     &none           &none           &none           &none            &none  &trans
                      &trans  &trans  &trans    &trans          &trans          &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        numbers {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
