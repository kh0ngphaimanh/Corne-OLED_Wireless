/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&mt { flavor = "tap-unless-interrupted"; };

/ {
    combos {
        compatible = "zmk,combos";

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <7 8>;
        };

        closeWindow {
            bindings = <&kp LC(Q)>;
            key-positions = <26 27 28>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <4 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&gresc       &kp Q            &kp W           &kp F        &kp P             &kp B        &kp J        &kp L              &kp U         &kp Y            &kp SQT         &caps_word
&key_repeat  &mt RIGHT_WIN A  &mt LEFT_ALT R  &mt LCTRL S  &mt LEFT_SHIFT T  &kp G        &kp M        &mt RIGHT_SHIFT N  &mt RCTRL E   &mt RIGHT_ALT I  &mt LEFT_WIN O  &key_repeat
&none        &lt 3 Z          &kp X           &kp C        &kp D             &kp V        &kp K        &kp H              &kp COMMA     &kp DOT          &lt 3 SLASH     &none
                                              &lt 4 ESC    &lt 1 SPACE       &lt 2 TAB    &lt 6 ENTER  &lt 5 BACKSPACE    &lt 7 DELETE
            >;

            label = "base";
        };

        nav {
            bindings = <
&trans  &none     &kp RG(Q)  &kp RG(W)  &kp RG(F)       &none    &kp LC(LS(Z))  &kp LC(LS(V))   &kp LC(C)      &kp LC(X)     &kp LC(Z)  &trans
&trans  &kp LGUI  &kp LALT   &kp LCTRL  &kp LEFT_SHIFT  &none    &kp CLCK       &kp LEFT_ARROW  &kp DOWN       &kp UP_ARROW  &kp RIGHT  &trans
&trans  &none     &none      &none      &none           &none    &kp INSERT     &kp HOME        &kp PAGE_DOWN  &kp PAGE_UP   &kp END    &trans
                             &none      &trans          &none    &kp ENTER      &kp BACKSPACE   &kp DEL
            >;

            label = "nav";
        };

        mouse {
            label = "mouse";
            bindings = <
&trans  &none     &none     &none      &none           &none     &kp LC(LS(Z))  &kp LC(LS(V))   &kp LC(C)       &kp LC(X)     &kp LC(Z)        &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LEFT_SHIFT  &none     &none          &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans
&trans  &none     &none     &none      &none           &none     &none          &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &trans
                            &none      &none           &trans    &mkp RCLK      &mkp LCLK       &mkp MCLK
            >;
        };

        buttons {
            bindings = <
&trans  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LS(LC(Z))    &kp LS(LC(Z))  &kp LC(V)  &kp LC(C)  &kp LC(X)  &kp LC(Z)  &trans
&trans  &kp LGUI   &kp LALT   &kp LCTRL  &kp LSHFT  &none            &none          &kp RSHFT  &kp RCTRL  &kp RALT   &kp RGUI   &trans
&trans  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LS(LC(Z))    &kp LS(LC(Z))  &kp LC(V)  &kp LC(C)  &kp LC(X)  &kp LC(Z)  &trans
                              &mkp MCLK  &mkp LCLK  &mkp RCLK        &mkp RCLK      &mkp LCLK  &mkp MCLK
            >;

            label = "buttons";
        };

        media {
            bindings = <
&trans  &none     &none     &none      &none      &none    &none              &none             &none              &none            &none         &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none    &ext_power EP_TOG  &kp K_PREV        &kp K_VOLUME_DOWN  &kp K_VOLUME_UP  &kp K_NEXT    &trans
&trans  &none     &none     &none      &none      &none    &out OUT_TOG       &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2     &bt BT_SEL 3  &trans
                            &trans     &none      &none    &kp K_STOP         &kp K_PLAY_PAUSE  &kp K_MUTE
            >;

            label = "media";
        };

        numbers {
            bindings = <
&trans  &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT     &none  &none      &none      &none     &none     &trans
&trans  &kp SEMI   &kp N4  &kp N5   &kp N6  &kp EQUAL    &none  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp GRAVE  &kp N1  &kp N2   &kp N3  &kp BSLH     &none  &none      &none      &none     &none     &trans
                           &kp DOT  &kp N0  &kp MINUS    &none  &trans     &none
            >;

            label = "nums";
        };

        symbols {
            bindings = <
&trans  &kp LEFT_BRACE  &kp AMPERSAND    &kp ASTERISK          &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE    &none   &none      &none      &none     &none     &trans
&trans  &kp COLON       &kp DOLLAR       &kp PERCENT           &kp CARET              &kp PLUS           &none   &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp TILDE       &kp EXCLAMATION  &kp AT_SIGN           &kp HASH               &kp PIPE           &none   &none      &none      &none     &none     &trans
                                         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE     &trans  &none      &none
            >;

            label = "syms";
        };

        functions {
            bindings = <
&bootloader  &kp F12  &kp F7  &kp F8             &kp F9     &kp PRINTSCREEN    &none  &none      &none      &none     &none     &bootloader
&trans       &kp F11  &kp F4  &kp F5             &kp F6     &kp SCROLLLOCK     &none  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans       &kp F10  &kp F1  &kp F2             &kp F3     &kp PAUSE_BREAK    &none  &none      &none      &none     &none     &trans
                              &kp K_APPLICATION  &kp SPACE  &kp TAB            &none  &none      &trans
            >;

            label = "funs";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
