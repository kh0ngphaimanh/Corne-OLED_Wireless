/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    tapping-term-ms = <250>;
    flavor = "tap-preferred";
};

/ {
    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <19 20>;
        };

        toHome {
            bindings = <&to 0>;
            key-positions = <37 40>;
        };

        shiftHold {
            bindings = <&kt LEFT_SHIFT>;
            key-positions = <38 39>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemark_dh {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp LG(TAB)    &kp Q           &kp W           &kp F        &kp P             &kp B        &kp J          &kp L              &kp U                  &kp Y            &kp SEMICOLON    &kp LA(F4)
&kp LC(GRAVE)  &mt LEFT_WIN A  &mt LEFT_ALT R  &mt LCTRL S  &mt LEFT_SHIFT T  &kp G        &kp M          &mt RIGHT_SHIFT N  &mt RCTRL E            &mt RIGHT_ALT I  &mt RIGHT_WIN O  &kp SINGLE_QUOTE
&kp LC(LA(T))  &kp Z           &kp X           &kp C        &kp D             &kp V        &kp K          &kp H              &kp COMMA              &kp DOT          &kp FSLH         &tog 3
                                               &kp TAB      &mo 2             &kp SPACE    &kp BACKSPACE  &lt 4 ENTER        &mt LG(TAB) RIGHT_WIN
            >;

            label = "colemark_dh";
        };

        qwerty {
            bindings = <
&trans  &kp Q           &kp W           &kp E        &kp R             &kp T     &kp Y   &kp U              &kp I        &kp O            &kp P                    &trans
&trans  &mt LEFT_WIN A  &mt LEFT_ALT S  &mt LCTRL D  &mt LEFT_SHIFT F  &kp G     &kp H   &mt RIGHT_SHIFT J  &mt RCTRL K  &mt RIGHT_ALT L  &mt RIGHT_WIN SEMICOLON  &trans
&trans  &kp Z           &kp X           &kp C        &kp V             &kp B     &kp N   &kp M              &kp COMMA    &kp DOT          &kp FSLH                 &trans
                                        &trans       &trans            &trans    &trans  &trans             &trans
            >;

            label = "qwerty";
        };

        number {
            bindings = <
&trans     &kp N1           &kp N2    &kp N3                &kp N4                 &kp N5         &kp N6         &kp N7            &kp N8             &kp N9          &mt SEMICOLON N0  &trans
&kp GRAVE  &kp DOLLAR       &kp PLUS  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AT_SIGN    &kp PIPE       &kp MINUS         &kp EQUAL          &kp UNDERSCORE  &kp ASTERISK      &trans
&trans     &kp EXCLAMATION  &kp HASH  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp TILDE      &kp AMPERSAND  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PERCENT     &kp CARET         &trans
                                      &trans                &trans                 &trans         &trans         &trans            &trans
            >;

            label = "number";
        };

        function {
            bindings = <
&trans  &kp F2                &kp F3                &kp F4           &kp F5               &kp F6    &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &trans
&trans  &kp F1                &kp C_VOLUME_DOWN     &kp C_VOLUME_UP  &kp LA(PRINTSCREEN)  &to 0     &none   &none   &none   &none    &kp F12  &trans
&trans  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp LC(C)        &kp LC(LS(V))        &to 1     &none   &none   &none   &none    &none    &trans
                                                    &trans           &trans               &trans    &trans  &trans  &trans
            >;

            label = "function";
        };

        nav {
            bindings = <
&trans  &none      &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT  &kp DELETE        &mt RC(HOME) HOME              &kp LC(LS(TAB))  &kp LC(TAB)   &mt RC(END) END                  &none  &trans
&trans  &kp LCTRL  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &kp LEFT_SHIFT    &mt LC(LEFT_ARROW) LEFT_ARROW  &kp DOWN_ARROW   &kp UP_ARROW  &mt LC(RIGHT_ARROW) RIGHT_ARROW  &none  &trans
&trans  &none      &mkp RCLK       &msc SCRL_UP    &msc SCRL_DOWN   &none             &mkp LCLK                      &kp PAGE_DOWN    &kp PAGE_UP   &none                            &none  &trans
                                   &trans          &trans           &trans            &trans                         &trans           &trans
            >;

            label = "nav";
        };
    };
};
