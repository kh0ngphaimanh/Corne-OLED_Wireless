/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    tapping-term-ms = <250>;
    flavor = "tap-preferred";
};

/ {
    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <14 15>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <2 3>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <9 8>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <20 21>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <32 33>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp LA(F4)     &kp Q           &kp W           &kp F             &kp P        &kp B                   &kp J          &kp L        &kp U              &kp Y            &kp SQT          &kp LS(PRINTSCREEN)
&kp TAB        &mt LEFT_WIN A  &mt LEFT_ALT R  &mt LEFT_SHIFT S  &mt RCTRL T  &kp G                   &kp M          &mt LCTRL N  &mt RIGHT_SHIFT E  &mt RIGHT_ALT I  &mt RIGHT_WIN O  &kp LS(TAB)
&kp LC(SPACE)  &kp Z           &kp X           &kp C             &kp D        &kp V                   &kp K          &kp H        &kp COMMA          &kp DOT          &kp SEMICOLON    &tog 4
                                               &kp ESCAPE        &lt 1 TAB    &mt LEFT_SHIFT SPACE    &kp BACKSPACE  &lt 2 ENTER  &kp DEL
            >;

            label = "base";
        };

        nav {
            bindings = <
&trans  &kp C_BRIGHTNESS_INC  &kp C_BRIGHTNESS_DEC  &kp TAB         &kp LS(TAB)      &kp C_VOLUME_UP    &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP   &msc SCRL_RIGHT  &kp DEL   &trans
&trans  &kp LGUI              &kp LALT              &kp LSHFT       &kp LCTRL        &kp C_VOL_DN       &kp LEFT        &kp DOWN        &kp UP         &kp RIGHT        &kp BSPC  &trans
&trans  &mmv MOVE_LEFT        &mmv MOVE_UP          &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &kp K_MUTE         &kp HOME        &kp PAGE_UP     &kp PAGE_DOWN  &kp END          &kp RET   &trans
                                                    &mkp RCLK       &trans           &trans             &trans          &trans          &mkp LCLK
            >;

            label = "nav";
        };

        symbols {
            bindings = <
&trans  &kp LESS_THAN  &kp GREATER_THAN  &kp LEFT_BRACE        &kp RIGHT_BRACE  &kp GRAVE      &kp COLON  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LBKT      &kp RBKT         &trans
&trans  &kp TILDE      &kp AT_SIGN       &kp HASH              &kp DOLLAR       &kp PERCENT    &kp EQUAL  &kp LCTRL             &kp LSHFT              &kp LGUI      &kp LALT         &trans
&trans  &kp CARET      &kp AMPERSAND     &kp NON_US_BACKSLASH  &kp SLASH        &kp PIPE       &kp PLUS   &kp MINUS             &kp ASTERISK           &kp QUESTION  &kp EXCLAMATION  &trans
                                         &trans                &trans           &trans         &trans     &trans                &trans
            >;

            label = "symbols";
        };

        numbers {
            bindings = <
&trans  &kp NUMBER_1  &kp N2    &kp N3     &kp N4     &kp N5     &kp N6   &kp N7     &kp N8     &kp N9    &kp N0    &trans
&trans  &kp LGUI      &kp LALT  &kp LSHFT  &kp LCTRL  &kp F11    &kp F12  &kp RCTRL  &kp RSHFT  &kp RALT  &kp RGUI  &trans
&trans  &kp F1        &kp F2    &kp F3     &kp F4     &kp F5     &kp F6   &kp F7     &kp F8     &kp F9    &kp F10   &trans
                                &trans     &trans     &trans     &trans   &trans     &trans
            >;

            label = "numbers";
        };

        n_pad {
            bindings = <
&trans  &kp Q  &kp W  &kp E      &kp R      &kp ASTERISK       &kp PLUS    &kp N7      &kp N8      &kp N9  &none   &trans
&trans  &kp A  &kp S  &kp D      &kp F      &kp FSLH           &kp MINUS   &kp N4      &kp N5      &kp N6  &kp N0  &trans
&trans  &kp Z  &kp X  &kp C      &kp V      &kp EXCLAMATION    &kp EQUAL   &kp N1      &kp N2      &kp N3  &none   &trans
                      &kp GRAVE  &kp RCTRL  &trans             &bt BT_NXT  &bt BT_PRV  &bt BT_CLR
            >;

            label = "nums_pad";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        numbers {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
